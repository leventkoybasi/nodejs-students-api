tags:
  - Students
summary: Update or create student by id (upsert)
operationId: upsertStudent
description: Update all fields of a student by their ID, or create if not exists
security:
  - bearerAuth: []
parameters:
  - in: path
    name: id
    required: true
    schema:
      type: string
      example: '65ca67e7ae7f10c88b598384'
requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        required:
          - name
          - age
          - gender
          - avgMark
          - onDuty
          - parentId
        properties:
          name:
            type: string
            example: 'Jane Doe'
          age:
            type: number
            example: 13
          gender:
            type: string
            enum: ['male', 'female', 'other']
            example: 'female'
          avgMark:
            type: number
            example: 10.5
          onDuty:
            type: boolean
            example: true
          parentId:
            type: string
            example: 65e4decdd286b30065d54af9
          photo:
            type: string
            example: <https://res.cloudinary.com/uqwgdu/image/upload/image.png>
responses:
  '200':
    description: Student updated successfully
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Student updated successfully
            data:
              type: object
              $ref: '../../../components/schemas/student.yaml'
  '201':
    description: Student created successfully
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 201
            message:
              type: string
              example: Student created successfully
            data:
              type: object
              $ref: '../../../components/schemas/student.yaml'
  '401':
    $ref: '../../../components/responses/401.yaml'
  '404':
    description: Student not found
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 404
            message:
              type: string
              example: Student not found
